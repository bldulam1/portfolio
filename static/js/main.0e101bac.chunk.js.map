{"version":3,"sources":["styles/NavBarStyles.js","hooks/useToggleState.js","contexts/ThemeContext.js","contexts/LanguageContext.js","Navbar.js","styles/FormStyles.js","Form.js","PageContent.js","serviceWorker.js","index.js","App.js"],"names":["styles","theme","root","width","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","slicedToArray","state","setState","ThemeContext","createContext","ThemeProvider","props","_useToggleState","useToggleState","_useToggleState2","isDarkMode","toggleTheme","react_default","a","createElement","Provider","value","children","LanguageContext","LanguageProvider","language","setLanguage","changeLanguage","e","target","content","english","flag","french","spanish","withStyles","_useContext","useContext","classes","_content$language","className","AppBar_default","Toolbar_default","IconButton_default","Typography_default","variant","Switch_default","onChange","Search_default","InputBase_default","placeholder","concat","input","main","paper","marginTop","flexDirection","padding","avatar","margin","secondary","form","submit","words","signIn","email","password","remember","_words$language","Paper_default","Avatar_default","LockOutlined_default","Select_default","MenuItem_default","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoFocus","FormControlLabel_default","control","Checkbox_default","label","Button_default","type","PageContent","style","Boolean","window","location","hostname","match","ReactDOM","render","src_Navbar","src_Form","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e101bac.chunk.js","sourcesContent":["import { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginBottom: 0\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\"\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 200\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import { useState } from \"react\";\r\nfunction useToggle(initialVal = false) {\r\n  // call useState, \"reserve piece of state\"\r\n  const [state, setState] = useState(initialVal);\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  // return piece of state AND a function to toggle it\r\n  return [state, toggle];\r\n}\r\nexport default useToggle;\r\n","import React, { createContext } from \"react\";\r\nimport useToggleState from \"../hooks/useToggleState\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport function ThemeProvider(props) {\r\n  const [isDarkMode, toggleTheme] = useToggleState(false);\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const LanguageContext = createContext();\r\n\r\nexport function LanguageProvider(props) {\r\n  const [language, setLanguage] = useState(\"spanish\");\r\n  const changeLanguage = e => setLanguage(e.target.value);\r\n  return (\r\n    <LanguageContext.Provider value={{ language, changeLanguage }}>\r\n      {props.children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"./styles/NavBarStyles\";\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\nimport { LanguageContext } from \"./contexts/LanguageContext\";\r\n\r\nconst content = {\r\n  english: {\r\n    search: \"Search\",\r\n    flag: \"🇬🇧\"\r\n  },\r\n  french: {\r\n    search: \"Chercher\",\r\n    flag: \"🇫🇷\"\r\n  },\r\n  spanish: {\r\n    search: \"Buscar\",\r\n    flag: \"🇪🇸\"\r\n  }\r\n};\r\nfunction Navbar(props) {\r\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\r\n  const { language } = useContext(LanguageContext);\r\n  const { classes } = props;\r\n  const { search, flag } = content[language];\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' color={isDarkMode ? \"default\" : \"primary\"}>\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color='inherit'>\r\n            <span>{flag}</span>\r\n          </IconButton>\r\n          <Typography className={classes.title} variant='h6' color='inherit'>\r\n            App Title\r\n          </Typography>\r\n          <Switch onChange={toggleTheme} />\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder={`${search}...`}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\nexport default withStyles(styles)(Navbar);\r\n","const styles = theme => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  }\r\n});\r\nexport default styles;\r\n","import React, { useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport styles from \"./styles/FormStyles\";\r\nimport { LanguageContext } from \"./contexts/LanguageContext\";\r\nconst words = {\r\n  english: {\r\n    signIn: \"Sign In\",\r\n    email: \"Email Address\",\r\n    password: \"Password\",\r\n    remember: \"Remember Me\"\r\n  },\r\n  french: {\r\n    signIn: \"Se Connecter\",\r\n    email: \"Adresse Électronique\",\r\n    password: \"Mot de Passe\",\r\n    remember: \"Souviens-toi De Moi\"\r\n  },\r\n  spanish: {\r\n    signIn: \"Registrarse\",\r\n    email: \"Correo Electrónico\",\r\n    password: \"Contraseña\",\r\n    remember: \"Recuérdame\"\r\n  }\r\n};\r\nfunction Form(props) {\r\n  const { language, changeLanguage } = useContext(LanguageContext);\r\n  const { classes } = props;\r\n  const { email, signIn, password, remember } = words[language];\r\n  return (\r\n    <main className={classes.main}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant='h5'>{signIn}</Typography>\r\n        <Select value={language} onChange={changeLanguage}>\r\n          <MenuItem value='english'>English</MenuItem>\r\n          <MenuItem value='french'>French</MenuItem>\r\n          <MenuItem value='spanish'>Spanish</MenuItem>\r\n        </Select>\r\n        <form className={classes.form}>\r\n          <FormControl margin='normal' required fullWidth>\r\n            <InputLabel htmlFor='email'>{email}</InputLabel>\r\n            <Input id='email' name='email' autoFocus />\r\n          </FormControl>\r\n          <FormControl margin='normal' required fullWidth>\r\n            <InputLabel htmlFor='password'>{password}</InputLabel>\r\n            <Input id='password' name='password' autoFocus />\r\n          </FormControl>\r\n          <FormControlLabel\r\n            control={<Checkbox color='primary' />}\r\n            label={remember}\r\n          />\r\n          <Button\r\n            variant='contained'\r\n            type='submit'\r\n            fullWidth\r\n            color='primary'\r\n            className={classes.submit}\r\n          >\r\n            {signIn}\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </main>\r\n  );\r\n}\r\nexport default withStyles(styles)(Form);\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"./contexts/ThemeContext\";\r\n\r\nexport default function PageContent(props) {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const styles = {\r\n    backgroundColor: isDarkMode ? \"black\" : \"white\",\r\n    height: \"100vh\",\r\n    width: \"100vw\"\r\n  };\r\n  return <div style={styles}>{props.children}</div>;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Form from \"./Form\";\r\nimport PageContent from \"./PageContent\";\r\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\r\nimport { LanguageProvider } from \"./contexts/LanguageContext\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <LanguageProvider>\r\n        <PageContent>\r\n          <Navbar />\r\n          <Form />\r\n        </PageContent>\r\n      </LanguageProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}